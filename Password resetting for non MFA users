import json
import boto3
from datetime import datetime

def lambda_handler(event, context):
    client = boto3.client('iam')
    client1 = boto3.client('sns')
    iam_users = []
    passwordaccessed=[]
    response = client.list_users()
    
    for user in response['Users']:
        print(user['UserName'])
        if 'PasswordLastUsed' in user:
            #fetching the time details
            d1_str=str(user['PasswordLastUsed']) 
            d3 = datetime.strptime(d1_str, '%Y-%m-%d %H:%M:%S+00:00')
            d2= str(datetime.now().replace(microsecond=0))
            d4 = datetime.strptime(d2,'%Y-%m-%d %H:%M:%S')
            delta= d4-d3
            #print('Difference',delta.days)
            if delta.days > 90:
                passwordaccessed.append(user['UserName'])
            else:
                iam_users.append(user['UserName'])
            
          
    print('iam users- login less than 90 days ', iam_users)
    print('More than 90 days',passwordaccessed)
    
    
    #checking MFA for users who login is less than 90 days
    no_mfa_users = []
    for iam_user in iam_users:
        response = client.list_mfa_devices(UserName=iam_user)
        if not response['MFADevices']:
            no_mfa_users.append(iam_user)
    print('No MFA Users login less than 90 days',no_mfa_users)
      
    for i in non_mfa_users:
	response = client.update_login_profile(
    			UserName=i,
    			Password='abcd@1234',
    			PasswordResetRequired = True )

    #Publish messages
    message = ""
    message = message + "The Following users are not MFA compliant. Request you to initiate appropirate action. \n "
    for i in no_mfa_users:
        message = message + '\n \t' + i
        
    response1 = client1.publish(
    TargetArn='arn:aws:sns:ap-south-1:625593931709:mfa',
    Message= message,
    Subject='MFA not enabled users list'
    ) 
